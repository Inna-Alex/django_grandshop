# Generated by Django 3.1 on 2020-09-02 13:07

import catalog.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Введите название категории', max_length=200, verbose_name='Название')),
                ('summary', models.CharField(help_text='Введите описание категории', max_length=500, verbose_name='Описание')),
                ('availability', models.BooleanField(default=False, help_text='Выберите если категория доступна', verbose_name='Доступность')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Дата создания категории', verbose_name='Дата создания')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Введите название продукта', max_length=200, verbose_name='Наименование')),
                ('summary', models.CharField(help_text='Введите описание продукта', max_length=500, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[catalog.models.validate_positive], verbose_name='Цена')),
                ('availability', models.BooleanField(default=False, help_text='Выберите если продукт есть в наличии', verbose_name='В наличии')),
                ('quantity', models.IntegerField(help_text='Введите количество продукта', validators=[catalog.models.validate_zero_or_positive], verbose_name='Количество')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Дата создания продукта', verbose_name='Дата создания')),
                ('last_accessed', models.DateTimeField(blank=True, null=True, verbose_name='Дата последнего просмотра')),
                ('counter_view', models.BigIntegerField(default=0, verbose_name='Количество просмотров')),
                ('counter_buy', models.BigIntegerField(default=0, verbose_name='Количество покупок')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ItemIssue',
            fields=[
                ('item_issue_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Дата создания заявки', verbose_name='Дата создания')),
            ],
        ),
        migrations.CreateModel(
            name='Manufactor',
            fields=[
                ('manufactor_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Введите название производителя', max_length=200, verbose_name='Название')),
                ('summary', models.CharField(help_text='Введите описание производителя', max_length=500, verbose_name='Описание')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Дата создания производителя', verbose_name='Дата создания')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID', primary_key=True, serialize=False)),
                ('comment', models.CharField(help_text='Комментарий к заказу', max_length=500, verbose_name='Комментарий')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Дата создания заказа', verbose_name='Дата создания')),
                ('delivery_date', models.DateField(default=datetime.date(2020, 9, 7), help_text='Дата доставки заказа', verbose_name='Дата доставки')),
                ('status', models.CharField(blank=True, choices=[('c', 'Создан'), ('p', 'Оплачен'), ('d', 'Доставлен')], default='c', help_text='Статус заказа', max_length=1, verbose_name='Статус')),
                ('customer', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('order_item_id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(help_text='Введите количество продукта', verbose_name='Количество')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Дата добавления продукта', verbose_name='Дата создания')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.order', verbose_name='Заказ')),
                ('orderitem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.item', verbose_name='Продукт')),
            ],
        ),
        migrations.AddIndex(
            model_name='manufactor',
            index=models.Index(fields=['name'], name='catalog_man_name_10c8b4_idx'),
        ),
        migrations.AddField(
            model_name='itemissue',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='itemissue',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.item', verbose_name='Продукт'),
        ),
        migrations.AddField(
            model_name='item',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.category', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='item',
            name='manufactor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.manufactor', verbose_name='Производитель'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name'], name='catalog_cat_name_39f70b_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['name'], name='catalog_ite_name_9b7e7e_idx'),
        ),
    ]
